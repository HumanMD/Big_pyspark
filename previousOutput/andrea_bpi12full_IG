---------------------------------------------------------------------------
NOTA:   BIG.PY RISCONTRA IndexError, BIG_PYSPARK.PY RISCONTRA IndexError
---------------------------------------------------------------------------
--- BIG.PY ERROR MESSAGE ---
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
<ipython-input-13-8994b9788e65> in <module>()
      8       D, I = checkTraceConformance2(trace,net,initial_marking, final_marking)
      9       if len(D)+len(I)>0:
---> 10         Wi= irregularGraphReparing(V,W,D,I,cr)
     11       num = trace.attributes.get('concept:name')
     12 end = time.time()

1 frames
<ipython-input-11-aeae7e122b15> in DeletionRepair(Wi, V, d_elements, cr)
      3   Wr2 = []
      4   i = d_elements[0][0]
----> 5   if (d_elements[-1][1],V[i-1][1]) in cr:
      6     for edge in Wi:
      7       if edge[1][0] == i and edge[0][0] < i:

IndexError: list index out of range
---------------------------------------------------------------------------
--- BIG_PYSPARK.PY ERROR MESSAGE ---
---------------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/sf_cartella_condivisa/progetto/Big_pyspark/main.py", line 60, in <module>
    .select('trace_id', 'V', 'W', 'Wi').show()
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/sql/dataframe.py", line 484, in show
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1305, in __call__
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in deco
pyspark.sql.utils.PythonException:
  An exception was thrown from the Python worker. Please see the stack trace below.
Traceback (most recent call last):
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/worker.py", line 604, in main
    process()
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/worker.py", line 596, in process
    serializer.dump_stream(out_iter, outfile)
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/serializers.py", line 211, in dump_stream
    self.serializer.dump_stream(self._batched(iterator), stream)
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/serializers.py", line 132, in dump_stream
    for obj in iterator:
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/serializers.py", line 200, in _batched
    for item in iterator:
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/worker.py", line 450, in mapper
    result = tuple(f(*[a[o] for o in arg_offsets]) for (arg_offsets, f) in udfs)
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/worker.py", line 450, in <genexpr>
    result = tuple(f(*[a[o] for o in arg_offsets]) for (arg_offsets, f) in udfs)
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/worker.py", line 83, in <lambda>
    return lambda *a: toInternal(f(*a))
  File "/home/human/hadoop/spark-3.2.1/spark-3.1.2-bin-without-hadoop/python/lib/pyspark.zip/pyspark/util.py", line 73, in wrapper
    return f(*args, **kwargs)
  File "/media/sf_cartella_condivisa/progetto/Big_pyspark/main.py", line 52, in <lambda>
    udf_irregularGraphRepairing = F.udf(lambda V, W, D, I: gf.irregularGraphRepairing(V, W, D, I, cr), W_schema)
  File "/tmp/spark-192b1d29-a1ed-4c5e-9bda-da806b361084/userFiles-c97af952-d241-4015-b278-31e2ab43b1c4/utils.zip/utils/genericFunctions.py", line 234, in irregularGraphRepairing
    Wi = DeletionRepair(Wi, V, d_element, cr)
  File "/tmp/spark-192b1d29-a1ed-4c5e-9bda-da806b361084/userFiles-c97af952-d241-4015-b278-31e2ab43b1c4/utils.zip/utils/genericFunctions.py", line 36, in DeletionRepair
    if (d_elements[-1][1], V[i - 1][1]) in cr:
IndexError: list index out of range
---------------------------------------------------------------------------

// Unrepaired Instance Graph
digraph {
	node [shape=circle]
	1 [label=ASUBMITTED]
	2 [label=APARTLYSUBMITTED]
	3 [label=APREACCEPTED]
	4 [label=AACCEPTED]
	5 [label=OSELECTED]
	6 [label=AFINALIZED]
	7 [label=OCREATED]
	8 [label=OSENT]
	9 [label=WCompleterenaanvraag]
	10 [label=WNabellenoffertes]
	11 [label=WNabellenoffertes]
	12 [label=OSENTBACK]
	13 [label=WNabellenoffertes]
	14 [label=AREGISTERED]
	15 [label=AAPPROVED]
	16 [label=OACCEPTED]
	17 [label=AACTIVATED]
	18 [label=WValiderenaanvraag]
	1 -> 2
	2 -> 3
	3 -> 4
	4 -> 5
	4 -> 6
	5 -> 7
	6 -> 7
	7 -> 8
	8 -> 9
	9 -> 10
	9 -> 11
	9 -> 12
	9 -> 13
	10 -> 14
	11 -> 14
	13 -> 14
	13 -> 15
	13 -> 16
	13 -> 17
	17 -> 18
}

// Deletion repaired Instance Graph
digraph {
	node [shape=circle]
	1 [label=ASUBMITTED]
	2 [label=APARTLYSUBMITTED]
	3 [label=APREACCEPTED]
	4 [label=AACCEPTED]
	5 [label=OSELECTED]
	6 [label=AFINALIZED]
	7 [label=OCREATED]
	8 [label=OSENT]
	9 [label=WCompleterenaanvraag]
	10 [label=WNabellenoffertes]
	11 [label=WNabellenoffertes]
	12 [label=OSENTBACK]
	13 [label=WNabellenoffertes]
	14 [label=AREGISTERED]
	15 [label=AAPPROVED]
	16 [label=OACCEPTED]
	17 [label=AACTIVATED]
	18 [label=WValiderenaanvraag]
	9 -> 13
	17 -> 18
	11 -> 14
	13 -> 15
	9 -> 11
	9 -> 10
	13 -> 16
	7 -> 8
	13 -> 17
	4 -> 6
	4 -> 5
	3 -> 4
	5 -> 7
	1 -> 2
	2 -> 3
	8 -> 9
	10 -> 14
	9 -> 12
	13 -> 14
	6 -> 7
}

